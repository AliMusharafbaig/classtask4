# -*- coding: utf-8 -*-
"""Untitled6.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1d9NdA7q2QAUD7YNAnsvyAcOY2sehGDUV
"""

pip install pyngrok

from google.colab import drive
drive.mount('/content/drive')

from flask import Flask, request, render_template_string, jsonify
import joblib
from pyngrok import ngrok
import numpy as np
import traceback

# Initialize the Flask application
app = Flask(__name__)

# Load the model and scaler
model_scaler = joblib.load('simplified_model.pkl')  # Ensure you have the correct path for your model
model = model_scaler['model']
scaler = model_scaler['scaler']

# HTML template for prediction form
HTML_TEMPLATE = '''
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <title>Diabetes Prediction</title>
    <style>
        body {
            background-image: linear-gradient(to right, #f8ffae, #43c6ac);
            color: white;
            font-family: 'Arial', sans-serif;
            height: 100vh;
        }
        .container {
            margin-top: 50px;
            background-color: rgba(255, 255, 255, 0.1);
            padding: 30px;
            border-radius: 15px;
            box-shadow: 0px 0px 20px 5px rgba(0, 0, 0, 0.5);
        }
        .form-label {
            color: white;
        }
        .btn-light {
            background-color: #ff9966;
            color: white;
            border: none;
        }
        .btn-light:hover {
            background-color: #ff5e62;
            color: white;
        }
        .prediction-result {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
        }
        .result-box {
            background-color: rgba(255, 255, 255, 0.85);
            padding: 40px;
            border-radius: 15px;
            box-shadow: 0px 0px 25px 5px rgba(0, 0, 0, 0.3);
            text-align: center;
        }
        .result-diabetic {
            color: #ff4d4d;
            font-weight: bold;
            font-size: 3em;
        }
        .result-not-diabetic {
            color: #4CAF50;
            font-weight: bold;
            font-size: 3em;
        }
        .result-text {
            margin-top: 15px;
            font-size: 1.5em;
            color: #333;
        }
        a.btn-light {
            font-size: 1.2em;
            margin-top: 20px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2 class="text-center mb-4">Diabetes Prediction Form</h2>
        <div class="row justify-content-center">
            <div class="col-md-6">
                <form action="/predict" method="post" class="p-4 rounded">
                    <div class="mb-3">
                        <label for="age" class="form-label">Age:</label>
                        <input type="number" class="form-control" id="age" name="age" required>
                    </div>
                    <div class="mb-3">
                        <label for="bmi" class="form-label">BMI (Body Mass Index):</label>
                        <input type="number" step="0.01" class="form-control" id="bmi" name="bmi" required>
                    </div>
                    <div class="mb-3">
                        <label for="HbA1c_level" class="form-label">HbA1c Level:</label>
                        <input type="number" step="0.01" class="form-control" id="HbA1c_level" name="HbA1c_level" required>
                    </div>
                    <div class="mb-3">
                        <label for="glucose" class="form-label">Blood Glucose Level:</label>
                        <input type="number" class="form-control" id="glucose" name="glucose" required>
                    </div>
                    <button type="submit" class="btn btn-light w-100">Predict Diabetes</button>
                </form>
            </div>
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
'''

@app.route('/')
def home():
    return render_template_string(HTML_TEMPLATE)

@app.route('/predict', methods=['POST'])
def predict():
    try:
        # Collect inputs from the form
        age = float(request.form['age'])
        bmi = float(request.form['bmi'])
        HbA1c_level = float(request.form['HbA1c_level'])
        glucose = float(request.form['glucose'])

        # Combine all features into an array
        input_features = np.array([[age, bmi, HbA1c_level, glucose]])

        # Apply scaling
        input_features_scaled = scaler.transform(input_features)

        # Make prediction
        prediction = model.predict(input_features_scaled)

        # Stylish result display
        if prediction[0] == 1:
            result = '''
            <div class="prediction-result">
                <div class="result-box">
                    <h2 class="result-diabetic">Diabetic</h2>
                    <p class="result-text">Our analysis indicates that you may have diabetes. Please consult a healthcare professional for more detailed advice.</p>
                    <a href="/" class="btn btn-light">Go Back</a>
                </div>
            </div>
            '''
        else:
            result = '''
            <div class="prediction-result">
                <div class="result-box">
                    <h2 class="result-not-diabetic">Not Diabetic</h2>
                    <p class="result-text">Our analysis indicates that you are not likely to have diabetes. Keep maintaining a healthy lifestyle!</p>
                    <a href="/" class="btn btn-light">Go Back</a>
                </div>
            </div>
            '''
        return render_template_string(result)
    except Exception as e:
        # Log the error and return a message
        print(traceback.format_exc())
        return render_template_string(f'''
        <div class="prediction-result">
            <div class="result-box">
                <h2 style="color:red;">Internal Server Error</h2>
                <p>{str(e)}</p>
                <a href="/" class="btn btn-light">Go Back</a>
            </div>
        </div>''')

# Start ngrok tunnel and Flask app
def start_ngrok():
    ngrok.set_auth_token("2lyvYEUQEe5rg7asxqHgrTaQoAN_2EojyWiDihBbnEbLPbwys")  # Replace with your actual ngrok auth token
    url = ngrok.connect(5000)
    print(' * Tunnel URL:', url)

if __name__ == '__main__':
    start_ngrok()
    app.run()